
Lab 9.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000006ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000063a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000006ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000720  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a2b  00000000  00000000  00000768  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000942  00000000  00000000  00001193  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000041f  00000000  00000000  00001ad5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00001ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004aa  00000000  00000000  00001fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000017d  00000000  00000000  0000247e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000025fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 ac 00 	jmp	0x158	; 0x158 <__vector_7>
  20:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__vector_8>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__vector_14>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_21>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a1 30       	cpi	r26, 0x01	; 1
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 de 00 	call	0x1bc	; 0x1bc <main>
  d4:	0c 94 1b 03 	jmp	0x636	; 0x636 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <__vector_14>:
}



ISR(TIMER0_COMPA_vect)
{
  dc:	1f 92       	push	r1
  de:	0f 92       	push	r0
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	0f 92       	push	r0
  e4:	11 24       	eor	r1, r1
	
	
}
  e6:	0f 90       	pop	r0
  e8:	0f be       	out	0x3f, r0	; 63
  ea:	0f 90       	pop	r0
  ec:	1f 90       	pop	r1
  ee:	18 95       	reti

000000f0 <__vector_21>:


ISR(ADC_vect)
{
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	2f 93       	push	r18
  fc:	3f 93       	push	r19
  fe:	4f 93       	push	r20
 100:	5f 93       	push	r21
 102:	6f 93       	push	r22
 104:	7f 93       	push	r23
 106:	8f 93       	push	r24
 108:	9f 93       	push	r25
 10a:	af 93       	push	r26
 10c:	bf 93       	push	r27
 10e:	ef 93       	push	r30
 110:	ff 93       	push	r31
	//uint16_t variable = ADC; //Automatically reads both ADCH and ADCL
	
	uint16_t adc = ADC*.097656;  // ADC*1/1024 *100
 112:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 116:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	
	 Converted_value = adc;
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	0e 94 20 02 	call	0x440	; 0x440 <__floatunsisf>
 122:	2e ed       	ldi	r18, 0xDE	; 222
 124:	3f ef       	ldi	r19, 0xFF	; 255
 126:	47 ec       	ldi	r20, 0xC7	; 199
 128:	5d e3       	ldi	r21, 0x3D	; 61
 12a:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 12e:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 132:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
	
	
	//convert ADC value to OCRnB value
}
 136:	ff 91       	pop	r31
 138:	ef 91       	pop	r30
 13a:	bf 91       	pop	r27
 13c:	af 91       	pop	r26
 13e:	9f 91       	pop	r25
 140:	8f 91       	pop	r24
 142:	7f 91       	pop	r23
 144:	6f 91       	pop	r22
 146:	5f 91       	pop	r21
 148:	4f 91       	pop	r20
 14a:	3f 91       	pop	r19
 14c:	2f 91       	pop	r18
 14e:	0f 90       	pop	r0
 150:	0f be       	out	0x3f, r0	; 63
 152:	0f 90       	pop	r0
 154:	1f 90       	pop	r1
 156:	18 95       	reti

00000158 <__vector_7>:




ISR (TIMER2_COMPA_vect)
{
 158:	1f 92       	push	r1
 15a:	0f 92       	push	r0
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	0f 92       	push	r0
 160:	11 24       	eor	r1, r1
	LEDON;
 162:	2d 9a       	sbi	0x05, 5	; 5
}
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <__vector_8>:


ISR (TIMER2_COMPB_vect)
{
 16e:	1f 92       	push	r1
 170:	0f 92       	push	r0
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	0f 92       	push	r0
 176:	11 24       	eor	r1, r1
	LEDOFF;
 178:	2d 98       	cbi	0x05, 5	; 5
}
 17a:	0f 90       	pop	r0
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	0f 90       	pop	r0
 180:	1f 90       	pop	r1
 182:	18 95       	reti

00000184 <adc_init>:


void adc_init(void)

{
	ADMUX |= (1 << REFS0); //VCC reference voltage
 184:	ec e7       	ldi	r30, 0x7C	; 124
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	80 64       	ori	r24, 0x40	; 64
 18c:	80 83       	st	Z, r24
	ADMUX |= (1 << MUX1) | (1 << MUX0); //Select ADC channel
 18e:	80 81       	ld	r24, Z
 190:	83 60       	ori	r24, 0x03	; 3
 192:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN); //ADC Enable
 194:	ea e7       	ldi	r30, 0x7A	; 122
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	80 68       	ori	r24, 0x80	; 128
 19c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADIE); //ADC Conversion Complete Interrupt Enable
 19e:	80 81       	ld	r24, Z
 1a0:	88 60       	ori	r24, 0x08	; 8
 1a2:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS1) | (1 << ADPS0); //ADC Prescaler
 1a4:	80 81       	ld	r24, Z
 1a6:	83 60       	ori	r24, 0x03	; 3
 1a8:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADATE); //Enable Auto Trigger
 1aa:	80 81       	ld	r24, Z
 1ac:	80 62       	ori	r24, 0x20	; 32
 1ae:	80 83       	st	Z, r24
	ADCSRB |= (1 << ADTS1) | (1 << ADTS0); // Configure Auto Trigger
 1b0:	eb e7       	ldi	r30, 0x7B	; 123
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	83 60       	ori	r24, 0x03	; 3
 1b8:	80 83       	st	Z, r24
 1ba:	08 95       	ret

000001bc <main>:

	

int main(void)
{
   DDRB |= (1<< DDB5);
 1bc:	25 9a       	sbi	0x04, 5	; 4
	sei();
 1be:	78 94       	sei
	/* CTC mode*/
	TCCR0A |= 1 << WGM01;
 1c0:	84 b5       	in	r24, 0x24	; 36
 1c2:	82 60       	ori	r24, 0x02	; 2
 1c4:	84 bd       	out	0x24, r24	; 36
	/* 64 preset*/
	TCCR0B |= (1 << CS00) |(1 << CS01);
 1c6:	85 b5       	in	r24, 0x25	; 37
 1c8:	83 60       	ori	r24, 0x03	; 3
 1ca:	85 bd       	out	0x25, r24	; 37
	/* setting to 1ms occurs at 250-1 count */
	OCR0A = 249;
 1cc:	89 ef       	ldi	r24, 0xF9	; 249
 1ce:	87 bd       	out	0x27, r24	; 39
	
	/* compA interrupt enable */
	TIMSK0 |=  (1<< OCIE0A);
 1d0:	ee e6       	ldi	r30, 0x6E	; 110
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	82 60       	ori	r24, 0x02	; 2
 1d8:	80 83       	st	Z, r24
	
	
	////////////////
	
	TCCR2A |= 1 << WGM21;
 1da:	e0 eb       	ldi	r30, 0xB0	; 176
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	82 60       	ori	r24, 0x02	; 2
 1e2:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS21) | (1 << CS22);
 1e4:	e1 eb       	ldi	r30, 0xB1	; 177
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	86 60       	ori	r24, 0x06	; 6
 1ec:	80 83       	st	Z, r24
	
	OCR2A = 104;  //104.167 for 300hz pre scale 256 
 1ee:	88 e6       	ldi	r24, 0x68	; 104
 1f0:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
			

			
	//compare match A and B interrupt
	TIMSK2 |=(1<<OCIE2A)|(1<<OCIE2B);
 1f4:	e0 e7       	ldi	r30, 0x70	; 112
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	86 60       	ori	r24, 0x06	; 6
 1fc:	80 83       	st	Z, r24
	
	
	
	adc_init();
 1fe:	0e 94 c2 00 	call	0x184	; 0x184 <adc_init>

	while (1)
	{
		if ( Converted_value <= 10 &&  Converted_value >= 0)  //0-10%
		{
			 OCR2B= OCR2A*.05;
 202:	03 eb       	ldi	r16, 0xB3	; 179
 204:	10 e0       	ldi	r17, 0x00	; 0
 206:	c4 eb       	ldi	r28, 0xB4	; 180
 208:	d0 e0       	ldi	r29, 0x00	; 0
	//UART_Initialize();


	while (1)
	{
		if ( Converted_value <= 10 &&  Converted_value >= 0)  //0-10%
 20a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 20e:	8b 30       	cpi	r24, 0x0B	; 11
 210:	90 f4       	brcc	.+36     	; 0x236 <main+0x7a>
 212:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
		{
			 OCR2B= OCR2A*.05;
 216:	f8 01       	movw	r30, r16
 218:	60 81       	ld	r22, Z
 21a:	70 e0       	ldi	r23, 0x00	; 0
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 224:	2d ec       	ldi	r18, 0xCD	; 205
 226:	3c ec       	ldi	r19, 0xCC	; 204
 228:	4c e4       	ldi	r20, 0x4C	; 76
 22a:	5d e3       	ldi	r21, 0x3D	; 61
 22c:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 230:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 234:	68 83       	st	Y, r22
			
		}
		if (Converted_value <= 20 && Converted_value > 10)  //0-10%
 236:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 23a:	85 31       	cpi	r24, 0x15	; 21
 23c:	a0 f4       	brcc	.+40     	; 0x266 <main+0xaa>
 23e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 242:	8b 30       	cpi	r24, 0x0B	; 11
 244:	80 f0       	brcs	.+32     	; 0x266 <main+0xaa>
		{
			OCR2B= OCR2A*.20;
 246:	f8 01       	movw	r30, r16
 248:	60 81       	ld	r22, Z
 24a:	70 e0       	ldi	r23, 0x00	; 0
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 254:	2d ec       	ldi	r18, 0xCD	; 205
 256:	3c ec       	ldi	r19, 0xCC	; 204
 258:	4c e4       	ldi	r20, 0x4C	; 76
 25a:	5e e3       	ldi	r21, 0x3E	; 62
 25c:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 260:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 264:	68 83       	st	Y, r22
			
		}
		if (Converted_value <= 30 && Converted_value > 20)  //0-10%
 266:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 26a:	8f 31       	cpi	r24, 0x1F	; 31
 26c:	a0 f4       	brcc	.+40     	; 0x296 <main+0xda>
 26e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 272:	85 31       	cpi	r24, 0x15	; 21
 274:	80 f0       	brcs	.+32     	; 0x296 <main+0xda>
		{
			OCR2B= OCR2A*.30;
 276:	f8 01       	movw	r30, r16
 278:	60 81       	ld	r22, Z
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 284:	2a e9       	ldi	r18, 0x9A	; 154
 286:	39 e9       	ldi	r19, 0x99	; 153
 288:	49 e9       	ldi	r20, 0x99	; 153
 28a:	5e e3       	ldi	r21, 0x3E	; 62
 28c:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 290:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 294:	68 83       	st	Y, r22
			
		}
		if (Converted_value <= 40 && Converted_value > 30)  //0-10%
 296:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 29a:	89 32       	cpi	r24, 0x29	; 41
 29c:	a0 f4       	brcc	.+40     	; 0x2c6 <main+0x10a>
 29e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2a2:	8f 31       	cpi	r24, 0x1F	; 31
 2a4:	80 f0       	brcs	.+32     	; 0x2c6 <main+0x10a>
		{
			OCR2B= OCR2A*.40;
 2a6:	f8 01       	movw	r30, r16
 2a8:	60 81       	ld	r22, Z
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 2b4:	2d ec       	ldi	r18, 0xCD	; 205
 2b6:	3c ec       	ldi	r19, 0xCC	; 204
 2b8:	4c ec       	ldi	r20, 0xCC	; 204
 2ba:	5e e3       	ldi	r21, 0x3E	; 62
 2bc:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 2c0:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 2c4:	68 83       	st	Y, r22
			
		}
		if (Converted_value <= 50 && Converted_value > 40)  //0-10%
 2c6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2ca:	83 33       	cpi	r24, 0x33	; 51
 2cc:	a0 f4       	brcc	.+40     	; 0x2f6 <main+0x13a>
 2ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2d2:	89 32       	cpi	r24, 0x29	; 41
 2d4:	80 f0       	brcs	.+32     	; 0x2f6 <main+0x13a>
		{
			OCR2B= OCR2A*.50;
 2d6:	f8 01       	movw	r30, r16
 2d8:	60 81       	ld	r22, Z
 2da:	70 e0       	ldi	r23, 0x00	; 0
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 2e4:	20 e0       	ldi	r18, 0x00	; 0
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	5f e3       	ldi	r21, 0x3F	; 63
 2ec:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 2f0:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 2f4:	68 83       	st	Y, r22
			
		}
		
		if (Converted_value <= 60 && Converted_value > 50)  //0-10%
 2f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2fa:	8d 33       	cpi	r24, 0x3D	; 61
 2fc:	a0 f4       	brcc	.+40     	; 0x326 <main+0x16a>
 2fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 302:	83 33       	cpi	r24, 0x33	; 51
 304:	80 f0       	brcs	.+32     	; 0x326 <main+0x16a>
		{
			OCR2B= OCR2A*.60;
 306:	f8 01       	movw	r30, r16
 308:	60 81       	ld	r22, Z
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 314:	2a e9       	ldi	r18, 0x9A	; 154
 316:	39 e9       	ldi	r19, 0x99	; 153
 318:	49 e1       	ldi	r20, 0x19	; 25
 31a:	5f e3       	ldi	r21, 0x3F	; 63
 31c:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 320:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 324:	68 83       	st	Y, r22
			
		}
		if (Converted_value <= 70 && Converted_value > 60)  //0-10%
 326:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 32a:	87 34       	cpi	r24, 0x47	; 71
 32c:	a0 f4       	brcc	.+40     	; 0x356 <main+0x19a>
 32e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 332:	8d 33       	cpi	r24, 0x3D	; 61
 334:	80 f0       	brcs	.+32     	; 0x356 <main+0x19a>
		{
			OCR2B= OCR2A*.70;
 336:	f8 01       	movw	r30, r16
 338:	60 81       	ld	r22, Z
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 344:	23 e3       	ldi	r18, 0x33	; 51
 346:	33 e3       	ldi	r19, 0x33	; 51
 348:	43 e3       	ldi	r20, 0x33	; 51
 34a:	5f e3       	ldi	r21, 0x3F	; 63
 34c:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 350:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 354:	68 83       	st	Y, r22
			
		}
		
		if (Converted_value <= 80 && Converted_value > 70)  //0-10%
 356:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 35a:	81 35       	cpi	r24, 0x51	; 81
 35c:	a0 f4       	brcc	.+40     	; 0x386 <main+0x1ca>
 35e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 362:	87 34       	cpi	r24, 0x47	; 71
 364:	80 f0       	brcs	.+32     	; 0x386 <main+0x1ca>
		{
			OCR2B= OCR2A*.80;
 366:	f8 01       	movw	r30, r16
 368:	60 81       	ld	r22, Z
 36a:	70 e0       	ldi	r23, 0x00	; 0
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 374:	2d ec       	ldi	r18, 0xCD	; 205
 376:	3c ec       	ldi	r19, 0xCC	; 204
 378:	4c e4       	ldi	r20, 0x4C	; 76
 37a:	5f e3       	ldi	r21, 0x3F	; 63
 37c:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 380:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 384:	68 83       	st	Y, r22
			
		}
		if (Converted_value <= 90 && Converted_value > 80)  //0-10%
 386:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 38a:	8b 35       	cpi	r24, 0x5B	; 91
 38c:	a0 f4       	brcc	.+40     	; 0x3b6 <main+0x1fa>
 38e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 392:	81 35       	cpi	r24, 0x51	; 81
 394:	80 f0       	brcs	.+32     	; 0x3b6 <main+0x1fa>
		{
			OCR2B= OCR2A*.90;
 396:	f8 01       	movw	r30, r16
 398:	60 81       	ld	r22, Z
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 3a4:	26 e6       	ldi	r18, 0x66	; 102
 3a6:	36 e6       	ldi	r19, 0x66	; 102
 3a8:	46 e6       	ldi	r20, 0x66	; 102
 3aa:	5f e3       	ldi	r21, 0x3F	; 63
 3ac:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 3b0:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 3b4:	68 83       	st	Y, r22
			
		}
		if (Converted_value > 90)  //0-10%
 3b6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 3ba:	8b 35       	cpi	r24, 0x5B	; 91
 3bc:	08 f4       	brcc	.+2      	; 0x3c0 <main+0x204>
 3be:	25 cf       	rjmp	.-438    	; 0x20a <main+0x4e>
		{
			OCR2B= OCR2A*.99;
 3c0:	f8 01       	movw	r30, r16
 3c2:	60 81       	ld	r22, Z
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	0e 94 22 02 	call	0x444	; 0x444 <__floatsisf>
 3ce:	24 ea       	ldi	r18, 0xA4	; 164
 3d0:	30 e7       	ldi	r19, 0x70	; 112
 3d2:	4d e7       	ldi	r20, 0x7D	; 125
 3d4:	5f e3       	ldi	r21, 0x3F	; 63
 3d6:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 3da:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 3de:	68 83       	st	Y, r22
 3e0:	14 cf       	rjmp	.-472    	; 0x20a <main+0x4e>

000003e2 <__fixunssfsi>:
 3e2:	0e 94 65 02 	call	0x4ca	; 0x4ca <__fp_splitA>
 3e6:	88 f0       	brcs	.+34     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3e8:	9f 57       	subi	r25, 0x7F	; 127
 3ea:	98 f0       	brcs	.+38     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3ec:	b9 2f       	mov	r27, r25
 3ee:	99 27       	eor	r25, r25
 3f0:	b7 51       	subi	r27, 0x17	; 23
 3f2:	b0 f0       	brcs	.+44     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3f4:	e1 f0       	breq	.+56     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3f6:	66 0f       	add	r22, r22
 3f8:	77 1f       	adc	r23, r23
 3fa:	88 1f       	adc	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	1a f0       	brmi	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	ba 95       	dec	r27
 402:	c9 f7       	brne	.-14     	; 0x3f6 <__fixunssfsi+0x14>
 404:	14 c0       	rjmp	.+40     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 406:	b1 30       	cpi	r27, 0x01	; 1
 408:	91 f0       	breq	.+36     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 40a:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__fp_zero>
 40e:	b1 e0       	ldi	r27, 0x01	; 1
 410:	08 95       	ret
 412:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_zero>
 416:	67 2f       	mov	r22, r23
 418:	78 2f       	mov	r23, r24
 41a:	88 27       	eor	r24, r24
 41c:	b8 5f       	subi	r27, 0xF8	; 248
 41e:	39 f0       	breq	.+14     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 420:	b9 3f       	cpi	r27, 0xF9	; 249
 422:	cc f3       	brlt	.-14     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 424:	86 95       	lsr	r24
 426:	77 95       	ror	r23
 428:	67 95       	ror	r22
 42a:	b3 95       	inc	r27
 42c:	d9 f7       	brne	.-10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 42e:	3e f4       	brtc	.+14     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 430:	90 95       	com	r25
 432:	80 95       	com	r24
 434:	70 95       	com	r23
 436:	61 95       	neg	r22
 438:	7f 4f       	sbci	r23, 0xFF	; 255
 43a:	8f 4f       	sbci	r24, 0xFF	; 255
 43c:	9f 4f       	sbci	r25, 0xFF	; 255
 43e:	08 95       	ret

00000440 <__floatunsisf>:
 440:	e8 94       	clt
 442:	09 c0       	rjmp	.+18     	; 0x456 <__floatsisf+0x12>

00000444 <__floatsisf>:
 444:	97 fb       	bst	r25, 7
 446:	3e f4       	brtc	.+14     	; 0x456 <__floatsisf+0x12>
 448:	90 95       	com	r25
 44a:	80 95       	com	r24
 44c:	70 95       	com	r23
 44e:	61 95       	neg	r22
 450:	7f 4f       	sbci	r23, 0xFF	; 255
 452:	8f 4f       	sbci	r24, 0xFF	; 255
 454:	9f 4f       	sbci	r25, 0xFF	; 255
 456:	99 23       	and	r25, r25
 458:	a9 f0       	breq	.+42     	; 0x484 <__floatsisf+0x40>
 45a:	f9 2f       	mov	r31, r25
 45c:	96 e9       	ldi	r25, 0x96	; 150
 45e:	bb 27       	eor	r27, r27
 460:	93 95       	inc	r25
 462:	f6 95       	lsr	r31
 464:	87 95       	ror	r24
 466:	77 95       	ror	r23
 468:	67 95       	ror	r22
 46a:	b7 95       	ror	r27
 46c:	f1 11       	cpse	r31, r1
 46e:	f8 cf       	rjmp	.-16     	; 0x460 <__floatsisf+0x1c>
 470:	fa f4       	brpl	.+62     	; 0x4b0 <__floatsisf+0x6c>
 472:	bb 0f       	add	r27, r27
 474:	11 f4       	brne	.+4      	; 0x47a <__floatsisf+0x36>
 476:	60 ff       	sbrs	r22, 0
 478:	1b c0       	rjmp	.+54     	; 0x4b0 <__floatsisf+0x6c>
 47a:	6f 5f       	subi	r22, 0xFF	; 255
 47c:	7f 4f       	sbci	r23, 0xFF	; 255
 47e:	8f 4f       	sbci	r24, 0xFF	; 255
 480:	9f 4f       	sbci	r25, 0xFF	; 255
 482:	16 c0       	rjmp	.+44     	; 0x4b0 <__floatsisf+0x6c>
 484:	88 23       	and	r24, r24
 486:	11 f0       	breq	.+4      	; 0x48c <__floatsisf+0x48>
 488:	96 e9       	ldi	r25, 0x96	; 150
 48a:	11 c0       	rjmp	.+34     	; 0x4ae <__floatsisf+0x6a>
 48c:	77 23       	and	r23, r23
 48e:	21 f0       	breq	.+8      	; 0x498 <__floatsisf+0x54>
 490:	9e e8       	ldi	r25, 0x8E	; 142
 492:	87 2f       	mov	r24, r23
 494:	76 2f       	mov	r23, r22
 496:	05 c0       	rjmp	.+10     	; 0x4a2 <__floatsisf+0x5e>
 498:	66 23       	and	r22, r22
 49a:	71 f0       	breq	.+28     	; 0x4b8 <__floatsisf+0x74>
 49c:	96 e8       	ldi	r25, 0x86	; 134
 49e:	86 2f       	mov	r24, r22
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	60 e0       	ldi	r22, 0x00	; 0
 4a4:	2a f0       	brmi	.+10     	; 0x4b0 <__floatsisf+0x6c>
 4a6:	9a 95       	dec	r25
 4a8:	66 0f       	add	r22, r22
 4aa:	77 1f       	adc	r23, r23
 4ac:	88 1f       	adc	r24, r24
 4ae:	da f7       	brpl	.-10     	; 0x4a6 <__floatsisf+0x62>
 4b0:	88 0f       	add	r24, r24
 4b2:	96 95       	lsr	r25
 4b4:	87 95       	ror	r24
 4b6:	97 f9       	bld	r25, 7
 4b8:	08 95       	ret

000004ba <__fp_split3>:
 4ba:	57 fd       	sbrc	r21, 7
 4bc:	90 58       	subi	r25, 0x80	; 128
 4be:	44 0f       	add	r20, r20
 4c0:	55 1f       	adc	r21, r21
 4c2:	59 f0       	breq	.+22     	; 0x4da <__fp_splitA+0x10>
 4c4:	5f 3f       	cpi	r21, 0xFF	; 255
 4c6:	71 f0       	breq	.+28     	; 0x4e4 <__fp_splitA+0x1a>
 4c8:	47 95       	ror	r20

000004ca <__fp_splitA>:
 4ca:	88 0f       	add	r24, r24
 4cc:	97 fb       	bst	r25, 7
 4ce:	99 1f       	adc	r25, r25
 4d0:	61 f0       	breq	.+24     	; 0x4ea <__fp_splitA+0x20>
 4d2:	9f 3f       	cpi	r25, 0xFF	; 255
 4d4:	79 f0       	breq	.+30     	; 0x4f4 <__fp_splitA+0x2a>
 4d6:	87 95       	ror	r24
 4d8:	08 95       	ret
 4da:	12 16       	cp	r1, r18
 4dc:	13 06       	cpc	r1, r19
 4de:	14 06       	cpc	r1, r20
 4e0:	55 1f       	adc	r21, r21
 4e2:	f2 cf       	rjmp	.-28     	; 0x4c8 <__fp_split3+0xe>
 4e4:	46 95       	lsr	r20
 4e6:	f1 df       	rcall	.-30     	; 0x4ca <__fp_splitA>
 4e8:	08 c0       	rjmp	.+16     	; 0x4fa <__fp_splitA+0x30>
 4ea:	16 16       	cp	r1, r22
 4ec:	17 06       	cpc	r1, r23
 4ee:	18 06       	cpc	r1, r24
 4f0:	99 1f       	adc	r25, r25
 4f2:	f1 cf       	rjmp	.-30     	; 0x4d6 <__fp_splitA+0xc>
 4f4:	86 95       	lsr	r24
 4f6:	71 05       	cpc	r23, r1
 4f8:	61 05       	cpc	r22, r1
 4fa:	08 94       	sec
 4fc:	08 95       	ret

000004fe <__fp_zero>:
 4fe:	e8 94       	clt

00000500 <__fp_szero>:
 500:	bb 27       	eor	r27, r27
 502:	66 27       	eor	r22, r22
 504:	77 27       	eor	r23, r23
 506:	cb 01       	movw	r24, r22
 508:	97 f9       	bld	r25, 7
 50a:	08 95       	ret

0000050c <__mulsf3>:
 50c:	0e 94 99 02 	call	0x532	; 0x532 <__mulsf3x>
 510:	0c 94 0a 03 	jmp	0x614	; 0x614 <__fp_round>
 514:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__fp_pscA>
 518:	38 f0       	brcs	.+14     	; 0x528 <__mulsf3+0x1c>
 51a:	0e 94 03 03 	call	0x606	; 0x606 <__fp_pscB>
 51e:	20 f0       	brcs	.+8      	; 0x528 <__mulsf3+0x1c>
 520:	95 23       	and	r25, r21
 522:	11 f0       	breq	.+4      	; 0x528 <__mulsf3+0x1c>
 524:	0c 94 f3 02 	jmp	0x5e6	; 0x5e6 <__fp_inf>
 528:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_nan>
 52c:	11 24       	eor	r1, r1
 52e:	0c 94 80 02 	jmp	0x500	; 0x500 <__fp_szero>

00000532 <__mulsf3x>:
 532:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fp_split3>
 536:	70 f3       	brcs	.-36     	; 0x514 <__mulsf3+0x8>

00000538 <__mulsf3_pse>:
 538:	95 9f       	mul	r25, r21
 53a:	c1 f3       	breq	.-16     	; 0x52c <__mulsf3+0x20>
 53c:	95 0f       	add	r25, r21
 53e:	50 e0       	ldi	r21, 0x00	; 0
 540:	55 1f       	adc	r21, r21
 542:	62 9f       	mul	r22, r18
 544:	f0 01       	movw	r30, r0
 546:	72 9f       	mul	r23, r18
 548:	bb 27       	eor	r27, r27
 54a:	f0 0d       	add	r31, r0
 54c:	b1 1d       	adc	r27, r1
 54e:	63 9f       	mul	r22, r19
 550:	aa 27       	eor	r26, r26
 552:	f0 0d       	add	r31, r0
 554:	b1 1d       	adc	r27, r1
 556:	aa 1f       	adc	r26, r26
 558:	64 9f       	mul	r22, r20
 55a:	66 27       	eor	r22, r22
 55c:	b0 0d       	add	r27, r0
 55e:	a1 1d       	adc	r26, r1
 560:	66 1f       	adc	r22, r22
 562:	82 9f       	mul	r24, r18
 564:	22 27       	eor	r18, r18
 566:	b0 0d       	add	r27, r0
 568:	a1 1d       	adc	r26, r1
 56a:	62 1f       	adc	r22, r18
 56c:	73 9f       	mul	r23, r19
 56e:	b0 0d       	add	r27, r0
 570:	a1 1d       	adc	r26, r1
 572:	62 1f       	adc	r22, r18
 574:	83 9f       	mul	r24, r19
 576:	a0 0d       	add	r26, r0
 578:	61 1d       	adc	r22, r1
 57a:	22 1f       	adc	r18, r18
 57c:	74 9f       	mul	r23, r20
 57e:	33 27       	eor	r19, r19
 580:	a0 0d       	add	r26, r0
 582:	61 1d       	adc	r22, r1
 584:	23 1f       	adc	r18, r19
 586:	84 9f       	mul	r24, r20
 588:	60 0d       	add	r22, r0
 58a:	21 1d       	adc	r18, r1
 58c:	82 2f       	mov	r24, r18
 58e:	76 2f       	mov	r23, r22
 590:	6a 2f       	mov	r22, r26
 592:	11 24       	eor	r1, r1
 594:	9f 57       	subi	r25, 0x7F	; 127
 596:	50 40       	sbci	r21, 0x00	; 0
 598:	9a f0       	brmi	.+38     	; 0x5c0 <__mulsf3_pse+0x88>
 59a:	f1 f0       	breq	.+60     	; 0x5d8 <__mulsf3_pse+0xa0>
 59c:	88 23       	and	r24, r24
 59e:	4a f0       	brmi	.+18     	; 0x5b2 <__mulsf3_pse+0x7a>
 5a0:	ee 0f       	add	r30, r30
 5a2:	ff 1f       	adc	r31, r31
 5a4:	bb 1f       	adc	r27, r27
 5a6:	66 1f       	adc	r22, r22
 5a8:	77 1f       	adc	r23, r23
 5aa:	88 1f       	adc	r24, r24
 5ac:	91 50       	subi	r25, 0x01	; 1
 5ae:	50 40       	sbci	r21, 0x00	; 0
 5b0:	a9 f7       	brne	.-22     	; 0x59c <__mulsf3_pse+0x64>
 5b2:	9e 3f       	cpi	r25, 0xFE	; 254
 5b4:	51 05       	cpc	r21, r1
 5b6:	80 f0       	brcs	.+32     	; 0x5d8 <__mulsf3_pse+0xa0>
 5b8:	0c 94 f3 02 	jmp	0x5e6	; 0x5e6 <__fp_inf>
 5bc:	0c 94 80 02 	jmp	0x500	; 0x500 <__fp_szero>
 5c0:	5f 3f       	cpi	r21, 0xFF	; 255
 5c2:	e4 f3       	brlt	.-8      	; 0x5bc <__mulsf3_pse+0x84>
 5c4:	98 3e       	cpi	r25, 0xE8	; 232
 5c6:	d4 f3       	brlt	.-12     	; 0x5bc <__mulsf3_pse+0x84>
 5c8:	86 95       	lsr	r24
 5ca:	77 95       	ror	r23
 5cc:	67 95       	ror	r22
 5ce:	b7 95       	ror	r27
 5d0:	f7 95       	ror	r31
 5d2:	e7 95       	ror	r30
 5d4:	9f 5f       	subi	r25, 0xFF	; 255
 5d6:	c1 f7       	brne	.-16     	; 0x5c8 <__mulsf3_pse+0x90>
 5d8:	fe 2b       	or	r31, r30
 5da:	88 0f       	add	r24, r24
 5dc:	91 1d       	adc	r25, r1
 5de:	96 95       	lsr	r25
 5e0:	87 95       	ror	r24
 5e2:	97 f9       	bld	r25, 7
 5e4:	08 95       	ret

000005e6 <__fp_inf>:
 5e6:	97 f9       	bld	r25, 7
 5e8:	9f 67       	ori	r25, 0x7F	; 127
 5ea:	80 e8       	ldi	r24, 0x80	; 128
 5ec:	70 e0       	ldi	r23, 0x00	; 0
 5ee:	60 e0       	ldi	r22, 0x00	; 0
 5f0:	08 95       	ret

000005f2 <__fp_nan>:
 5f2:	9f ef       	ldi	r25, 0xFF	; 255
 5f4:	80 ec       	ldi	r24, 0xC0	; 192
 5f6:	08 95       	ret

000005f8 <__fp_pscA>:
 5f8:	00 24       	eor	r0, r0
 5fa:	0a 94       	dec	r0
 5fc:	16 16       	cp	r1, r22
 5fe:	17 06       	cpc	r1, r23
 600:	18 06       	cpc	r1, r24
 602:	09 06       	cpc	r0, r25
 604:	08 95       	ret

00000606 <__fp_pscB>:
 606:	00 24       	eor	r0, r0
 608:	0a 94       	dec	r0
 60a:	12 16       	cp	r1, r18
 60c:	13 06       	cpc	r1, r19
 60e:	14 06       	cpc	r1, r20
 610:	05 06       	cpc	r0, r21
 612:	08 95       	ret

00000614 <__fp_round>:
 614:	09 2e       	mov	r0, r25
 616:	03 94       	inc	r0
 618:	00 0c       	add	r0, r0
 61a:	11 f4       	brne	.+4      	; 0x620 <__fp_round+0xc>
 61c:	88 23       	and	r24, r24
 61e:	52 f0       	brmi	.+20     	; 0x634 <__fp_round+0x20>
 620:	bb 0f       	add	r27, r27
 622:	40 f4       	brcc	.+16     	; 0x634 <__fp_round+0x20>
 624:	bf 2b       	or	r27, r31
 626:	11 f4       	brne	.+4      	; 0x62c <__fp_round+0x18>
 628:	60 ff       	sbrs	r22, 0
 62a:	04 c0       	rjmp	.+8      	; 0x634 <__fp_round+0x20>
 62c:	6f 5f       	subi	r22, 0xFF	; 255
 62e:	7f 4f       	sbci	r23, 0xFF	; 255
 630:	8f 4f       	sbci	r24, 0xFF	; 255
 632:	9f 4f       	sbci	r25, 0xFF	; 255
 634:	08 95       	ret

00000636 <_exit>:
 636:	f8 94       	cli

00000638 <__stop_program>:
 638:	ff cf       	rjmp	.-2      	; 0x638 <__stop_program>
